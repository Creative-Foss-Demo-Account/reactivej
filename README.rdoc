= ReactiveJ

ReactiveJ is a simple library (maybe a "nano" framework) to help us building high-performance servers. It's build on top of the Java NIO library and applying the Reactor Pattern. But by now it's not a serious work, it's just a kidding with evented I/O. Yes, it's just a kidding to learn some concepts.

Well I hope it be fun to you too. :D

== Benchmark

This first benchmark was done without tunning the JVM.

    leandro@codezone ~/Projects/java/reactivej/bin 
    $ java samples.codezone.reactivej.tcp.echoserver.EchoServer
    Running a TCP server for test
    
    
    leandro@codezone ~/Projects/java/reactivej/bin 
    $ ab -n 10000 -c 25 http://192.168.0.103:8888/
    This is ApacheBench, Version 2.3 <$Revision: 655654 $>
    Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
    Licensed to The Apache Software Foundation, http://www.apache.org/
    
    Benchmarking 192.168.0.103 (be patient)
    Completed 1000 requests
    Completed 2000 requests
    Completed 3000 requests
    Completed 4000 requests
    Completed 5000 requests
    Completed 6000 requests
    Completed 7000 requests
    Completed 8000 requests
    Completed 9000 requests
    Completed 10000 requests
    Finished 10000 requests
    
    
    Server Software:        ReactiveJ/0.1
    Server Hostname:        192.168.0.103
    Server Port:            8888
    
    Document Path:          /
    Document Length:        1028 bytes
    
    Concurrency Level:      25
    Time taken for tests:   1.195 seconds
    Complete requests:      10000
    Failed requests:        0
    Write errors:           0
    Non-2xx responses:      10001
    Total transferred:      11811181 bytes
    HTML transferred:       10281028 bytes
    Requests per second:    8371.12 [#/sec] (mean)
    Time per request:       2.986 [ms] (mean)
    Time per request:       0.119 [ms] (mean, across all concurrent requests)
    Transfer rate:          9655.55 [Kbytes/sec] received
    
    Connection Times (ms)
                  min  mean[+/-sd] median   max
    Connect:        0    1   0.4      1       9
    Processing:     0    2   0.9      2      11
    Waiting:        0    2   0.9      2      11
    Total:          1    3   0.8      3      12
    
    Percentage of the requests served within a certain time (ms)
      50%      3
      66%      3
      75%      3
      80%      3
      90%      3
      95%      4
      98%      4
      99%      6
     100%     12 (longest request)

== Author

- Name: Leandro Silva (CodeZone)
- E-mail: leandrodoze@gmail.com
- Twitter: http://twitter.com/codezone
- Blog: http://leandrosilva.com.br 